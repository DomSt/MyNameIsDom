@charset "utf-8";



//=================================================================
//  MIXINS
//=================================================================

//-----------------------------------------------------------------
// Hatching

//  !
//  Using string concatenation beaucse interpolation / escape bug in libsass. Should be fixed with libsass 3.3
//  Opacity 1 doesn't work in Firefox because of escape problem with # symbol in url strings.

//  !
//  Color literal used as default color.
//  scss-lint:disable ColorVariable
@mixin hatching($color:#000, $opacity:.105, $stripeWidth:3, $gapWidth:6) {
  @if $opacity == 1 {
      @warn "Opacity '1' in hatching won't work in firefox. Please use '.9999'. See description for more information"
  }
  $width: $stripeWidth + $gapWidth;
  $halfWidth: $width / 2;
  background-color: transparent;
  background-image: url("data:image/svg+xml;utf8,#{ "<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%'><defs><pattern id='pinstripe' patternUnits='userSpaceOnUse' patternTransform='rotate(45)' width='" + $width + "' height='" + $width + "'><line x1='" + $halfWidth + "' y='0' x2='" + $halfWidth + "' y2='" + $width + "' stroke='" + rgba($color, $opacity) + "' stroke-width='" + $stripeWidth + "' /></pattern></defs><rect width='100%' height='100%' fill='url(%23pinstripe)' /></svg>" }");
}


//-----------------------------------------------------------------
// Media Queries
@mixin respond-to($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value != null {
    @media screen and (min-width: $value) {
      @content;
    }
  } @else {
    @warn "No value retrieved from `#{$breakpoint}`. "
        + "Please use values defined in `$breakpoints` map.";
  }
}
